/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author My_Asus
 */


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.sql.PreparedStatement;
import javax.swing.JPanel;

public class GUIMusicManagement extends javax.swing.JFrame {
    
     Connection con;
   Statement stmt;
   ResultSet rs;
   int curRow = 0;
    /**
     * Creates new form GUIMusicManagement
     */
    public GUIMusicManagement() {
        initComponents();
     
        DoConnect();
    }
    public void DoConnect(){
             try {
        String host = "jdbc:derby://localhost:1527/Songs";
        String uName = "pass";
        String uPass = "pass";
        con = DriverManager.getConnection(host, uName, uPass);
        
       stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
       String sql = "SELECT * FROM ALBUMS";
        rs = stmt.executeQuery(sql);
       
        rs.next();
         String album = rs.getString("Album");
        String genre = rs.getString("Genre");
        String artist = rs.getString("Artist");
        String released_date = rs.getString("Released_Date");
        String number_tracks = rs.getString("Number_Tracks");
        String image = rs.getString("IMAGE");
        
    
        
        txtAlbum.setText(album);
        txt_genre.setText (genre);
        txtArtist.setText (artist);
        txtReleasedDate.setText (released_date);
        txtNumberTracks.setText(number_tracks);
       
       
        txtImage.setIcon(ResizeImage(rs.getString("IMAGE"),null));
        
             }
       
           catch (SQLException err){
               JOptionPane.showMessageDialog(this, err.getMessage());
            
                }
          
         }
    String photopath="";
     
        
    public ImageIcon ResizeImage(String imagePath, byte[] pic){
        
        ImageIcon myImage = null;
        
        if(imagePath != null)
        {
            myImage = new ImageIcon(imagePath);
      
        }
        else{
            myImage = new ImageIcon(pic);
        }
        
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(txtImage.getWidth(), txtImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;}
         


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnChoose = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtImage = new javax.swing.JLabel();
        TxtSearch = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtNumberTracks = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAlbum = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtArtist = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_genre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtReleasedDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();
        btnSaveRecord = new javax.swing.JButton();
        btnCancelNewRecord = new javax.swing.JButton();
        btnNewRecord = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnUpdateRecord = new javax.swing.JButton();
        btnDeleteRecord = new javax.swing.JButton();
        btnSaveUpdateRecord = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Music Management Database");

        jPanel1.setBackground(new java.awt.Color(168, 218, 220));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnChoose.setBackground(new java.awt.Color(241, 250, 238));
        btnChoose.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnChoose.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\new-page.png")); // NOI18N
        btnChoose.setText("Choose Photo");
        btnChoose.setBorder(null);
        btnChoose.setEnabled(false);
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });
        jPanel1.add(btnChoose, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 160, -1));

        jPanel3.setLayout(new java.awt.GridBagLayout());
        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, 0));

        btnSearch.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\search.png")); // NOI18N
        btnSearch.setText(" Track");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 100, 40));

        jPanel5.setBackground(new java.awt.Color(11, 58, 109));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtImage, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtImage, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 240, -1));

        TxtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtSearchActionPerformed(evt);
            }
        });
        jPanel1.add(TxtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 250, 40));

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 48)); // NOI18N
        jLabel7.setText("Music");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        jLabel8.setText("Management");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        jPanel2.setBackground(new java.awt.Color(11, 58, 109));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNumberTracks.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        txtNumberTracks.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumberTracks.setBorder(null);
        txtNumberTracks.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtNumberTracks.setEnabled(false);
        jPanel2.add(txtNumberTracks, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 220, 40));

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel4.setText("Title track");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        txtAlbum.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        txtAlbum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAlbum.setBorder(null);
        txtAlbum.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAlbum.setEnabled(false);
        txtAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlbumActionPerformed(evt);
            }
        });
        jPanel2.add(txtAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 214, 40));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel1.setText("Album");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        txtArtist.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        txtArtist.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtArtist.setBorder(null);
        txtArtist.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtArtist.setEnabled(false);
        jPanel2.add(txtArtist, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 214, 40));

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel2.setText("Artist");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, -1, -1));

        txt_genre.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        txt_genre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_genre.setBorder(null);
        txt_genre.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_genre.setEnabled(false);
        jPanel2.add(txt_genre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 214, 40));

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel5.setText("Genre");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, -1, -1));

        txtReleasedDate.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        txtReleasedDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtReleasedDate.setBorder(null);
        txtReleasedDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtReleasedDate.setEnabled(false);
        jPanel2.add(txtReleasedDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 214, 40));

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel3.setText("Released Date");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\image\\Purple White Modern Gradation UIUX Designer Collection Resume.png")); // NOI18N
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 270, 320));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 290, 340));

        btnPrevious.setBackground(new java.awt.Color(241, 250, 238));
        btnPrevious.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\previous.png")); // NOI18N
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrevious, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 90, 90));

        btnSaveRecord.setBackground(new java.awt.Color(241, 250, 238));
        btnSaveRecord.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnSaveRecord.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\diskette.png")); // NOI18N
        btnSaveRecord.setText("Save Record");
        btnSaveRecord.setEnabled(false);
        btnSaveRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRecordActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 490, 141, -1));

        btnCancelNewRecord.setBackground(new java.awt.Color(241, 250, 238));
        btnCancelNewRecord.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnCancelNewRecord.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\cancel.png")); // NOI18N
        btnCancelNewRecord.setText("Cancel ");
        btnCancelNewRecord.setEnabled(false);
        btnCancelNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelNewRecordActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelNewRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 490, -1, -1));

        btnNewRecord.setBackground(new java.awt.Color(241, 250, 238));
        btnNewRecord.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnNewRecord.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\new-document.png")); // NOI18N
        btnNewRecord.setText("New Record");
        btnNewRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewRecordActionPerformed(evt);
            }
        });
        jPanel1.add(btnNewRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, -1, -1));

        btnNext.setBackground(new java.awt.Color(241, 250, 238));
        btnNext.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\next.png")); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel1.add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 90, 90));

        btnUpdateRecord.setBackground(new java.awt.Color(241, 250, 238));
        btnUpdateRecord.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnUpdateRecord.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\update.png")); // NOI18N
        btnUpdateRecord.setText("Update Record");
        btnUpdateRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRecordActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdateRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, -1, -1));

        btnDeleteRecord.setBackground(new java.awt.Color(241, 250, 238));
        btnDeleteRecord.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnDeleteRecord.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\bin.png")); // NOI18N
        btnDeleteRecord.setText("Delete ");
        btnDeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRecordActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeleteRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 440, -1, -1));

        btnSaveUpdateRecord.setBackground(new java.awt.Color(241, 250, 238));
        btnSaveUpdateRecord.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
        btnSaveUpdateRecord.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\diskette.png")); // NOI18N
        btnSaveUpdateRecord.setText("Save Update ");
        btnSaveUpdateRecord.setEnabled(false);
        btnSaveUpdateRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveUpdateRecordActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveUpdateRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 490, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon("C:\\Users\\My_Pe\\Desktop\\files music database\\design\\Purple White Modern Gradation UIUX Designer Collection Resume.png")); // NOI18N
        jLabel6.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 750, 580));

        jLabel9.setText("jLabel9");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
         try{
           
            if (rs.previous()) {
               String album = rs.getString("Album");
        String genre = rs.getString("Genre");
        String artist = rs.getString("Artist");
        String released_date = rs.getString("Released_Date");
        String number_tracks = rs.getString("Number_Tracks");
        String image = rs.getString("IMAGE");
        

        
        txtAlbum.setText(album);
        txt_genre.setText (genre);
        txtArtist.setText (artist);
        txtReleasedDate.setText (released_date);
        txtNumberTracks.setText(number_tracks);
        txtImage.setIcon(ResizeImage(rs.getString("IMAGE"),null));
            }
        
        else {
                rs.previous();
                JOptionPane.showMessageDialog(this,"End of File");
                
                }       
    }                                       

         catch (SQLException err) {
    JOptionPane.showMessageDialog( this,err.getMessage());
}
        
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
         try{
           
            if (rs.next()) {
               String album = rs.getString("Album");
        String genre = rs.getString("Genre");
        String artist = rs.getString("Artist");
        String released_date = rs.getString("Released_Date");
        String number_tracks = rs.getString("Number_Tracks");
        String image = rs.getString("IMAGE");
     

        
        txtAlbum.setText(album);
        txt_genre.setText (genre);
        txtArtist.setText (artist);
        txtReleasedDate.setText (released_date);
        txtNumberTracks.setText(number_tracks);
        txtImage.setIcon(ResizeImage(rs.getString("IMAGE"),null));
            }
        
        else {
                rs.previous();
                JOptionPane.showMessageDialog(this,"End of File");
                
                }       
    }                                       

         catch (SQLException err) {
    JOptionPane.showMessageDialog( this,err.getMessage());
}
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewRecordActionPerformed
        // TODO add your handling code here:
        try {
           
          curRow = rs.getRow();
	txtAlbum.setText("");
	txt_genre.setText ("");
	txtArtist.setText ("");
	txtReleasedDate.setText ("");
	txtNumberTracks.setText("");
        txtImage.setText("");
         txtImage.setIcon(ResizeImage(" ", null));
         
           
txtAlbum.setEnabled(true);
txtArtist.setEnabled(true);
txt_genre.setEnabled(true);
txtNumberTracks.setEnabled(true);
txtReleasedDate.setEnabled(true);

btnChoose.setEnabled(true);

btnPrevious.setEnabled(false);
btnNext.setEnabled(false);
btnUpdateRecord.setEnabled(false);
btnDeleteRecord.setEnabled(false);
btnNewRecord.setEnabled(false);
TxtSearch.setEnabled(false);
btnSearch.setEnabled(false);
 btnSaveRecord.setEnabled(true);
btnCancelNewRecord.setEnabled(true);
       } 
       catch (SQLException err) {
           JOptionPane.showMessageDialog(this,err.getMessage());
       }
    }//GEN-LAST:event_btnNewRecordActionPerformed

    private void btnSaveRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRecordActionPerformed

        String album =  txtAlbum.getText ();
        String genre =  txt_genre.getText ();
        String artist =  txtArtist.getText ();
        String released_date =   txtReleasedDate.getText ();
        String number_tracks =   txtNumberTracks.getText ();
         String image = photopath;
        

        

        try {

            rs.moveToInsertRow();

            rs.updateString ("ARTIST",artist);
            rs.updateString ("ALBUM",album);
            rs.updateString ("GENRE",genre);
            rs.updateString ("RELEASED_DATE",released_date);
            rs.updateString ("NUMBER_TRACKS",number_tracks);
            rs.updateString ("IMAGE", image);
           
            
            rs.insertRow();

            stmt.close();
            rs.close();

            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);

            String SQL = "SELECT * FROM ALBUMS " ;
            rs = stmt.executeQuery (SQL);

            rs.next();

            String album2 = rs.getString("Album");
        String genre2 = rs.getString("Genre");
        String artist2 = rs.getString("Artist");
        String released_date2 = rs.getString("Released_Date");
        String number_tracks2 = rs.getString("Number_Tracks");
      
      //  String image2 = rs.getString("IMAGE");
        
        txtAlbum.setText(album);
        txt_genre.setText (genre);
        txtArtist.setText (artist);
        txtReleasedDate.setText (released_date);
        txtNumberTracks.setText(number_tracks);
      
     //   txtImage.setIcon(ResizeImage(rs.getString("IMAGE"),null));

txtAlbum.setEnabled(!true);
txtArtist.setEnabled(!true);
txt_genre.setEnabled(!true);
txtNumberTracks.setEnabled(!true);
txtReleasedDate.setEnabled(!true);

btnChoose.setEnabled(!true);

btnPrevious.setEnabled(!false);
btnNext.setEnabled(!false);
btnUpdateRecord.setEnabled(!false);
btnDeleteRecord.setEnabled(!false);
btnNewRecord.setEnabled(!false);
TxtSearch.setEnabled(true);
btnSearch.setEnabled(true);


 btnSaveRecord.setEnabled(!true);
btnCancelNewRecord.setEnabled(!true);
rs.absolute (curRow);
            JOptionPane.showMessageDialog(this, "Record Saved");
        }
        catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
        }
//        txtAlbum.setEnabled(true);
//txtArtist.setEnabled(true);
//txt_genre.setEnabled(true);
//txtNumberTracks.setEnabled(true);
//txtReleasedDate.setEnabled(true);
//
//btnPrevious.setEnabled(false);
//btnNext.setEnabled(false);
//btnUpdateRecord.setEnabled(false);
//btnDeleteRecord.setEnabled(false);
//btnNewRecord.setEnabled(false);
//
// btnSaveRecord.setEnabled(true);
//btnCancelNewRecord.setEnabled(true);
    }//GEN-LAST:event_btnSaveRecordActionPerformed

    private void btnCancelNewRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelNewRecordActionPerformed
        try {
            rs.absolute (curRow);

            txtAlbum.setText(rs.getString("album"));
        txt_genre.setText (rs.getString("genre"));
        txtArtist.setText (rs.getString("artist"));
        txtReleasedDate.setText (rs.getString("released_date"));
        txtNumberTracks.setText(rs.getString("number_tracks"));
        txtImage.setIcon(ResizeImage(rs.getString("IMAGE"),null));
     
txtAlbum.setEnabled(!true);
txtArtist.setEnabled(!true);
txt_genre.setEnabled(!true);
txtNumberTracks.setEnabled(!true);
txtReleasedDate.setEnabled(!true);

btnChoose.setEnabled(!true);

btnPrevious.setEnabled(!false);
btnNext.setEnabled(!false);
btnUpdateRecord.setEnabled(!false);
btnDeleteRecord.setEnabled(!false);
btnNewRecord.setEnabled(!false);
TxtSearch.setEnabled(true);
btnSearch.setEnabled(true);


 btnSaveRecord.setEnabled(!true);
btnCancelNewRecord.setEnabled(!true);
        }
        catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());
        }

    }//GEN-LAST:event_btnCancelNewRecordActionPerformed

    private void btnDeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRecordActionPerformed
        // TODO add your handling code here:
         int response = JOptionPane.showConfirmDialog(null, "Do you want to delete it?", "Question", JOptionPane.YES_NO_OPTION);

        // Check the user's response and display a message accordingly
        if (response == JOptionPane.YES_OPTION) {
            try {
            
            rs.deleteRow();
            
           
       
            
            stmt.close();
            rs.close();
            
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            String SQL = "SELECT * FROM ALBUMS " ;
            rs = stmt.executeQuery (SQL);
            
            rs.next();
            
             String album = rs.getString("Album");
        String genre = rs.getString("Genre");
        String artist = rs.getString("Artist");
        String released_date = rs.getString("Released_Date");
        String number_tracks = rs.getString("Number_Tracks");
        String image = rs.getString("IMAGE");


        txtAlbum.setText(album);
        txt_genre.setText (genre);
        txtArtist.setText (artist);
        txtReleasedDate.setText (released_date);
        txtNumberTracks.setText(number_tracks);
        txtImage.setIcon(ResizeImage(rs.getString("IMAGE"),null));
            
        
           JOptionPane.showMessageDialog(this, "Record Deleted");
        }
            catch (SQLException err) {
           JOptionPane.showMessageDialog(this,err.getMessage());
       }
        
        } else if (response == JOptionPane.NO_OPTION) {
            JOptionPane.getRootFrame().dispose(); // Close the dialogue box
        }
        
    }//GEN-LAST:event_btnDeleteRecordActionPerformed

    private void btnUpdateRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRecordActionPerformed
     txtAlbum.setEnabled(true);
txtArtist.setEnabled(true);
txt_genre.setEnabled(true);
txtNumberTracks.setEnabled(true);
txtReleasedDate.setEnabled(true);

btnChoose.setEnabled(true);

btnPrevious.setEnabled(false);
btnNext.setEnabled(false);
btnUpdateRecord.setEnabled(false);
btnDeleteRecord.setEnabled(false);
btnNewRecord.setEnabled(false);
TxtSearch.setEnabled(false);
btnSearch.setEnabled(false);
   btnSaveUpdateRecord.setEnabled(true);

   // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateRecordActionPerformed

    private void btnSaveUpdateRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveUpdateRecordActionPerformed
      int response = JOptionPane.showConfirmDialog(null, "Do you want to Update it?", "Question", JOptionPane.YES_NO_OPTION);

        // Check the user's response and display a message accordingly
        if (response == JOptionPane.YES_OPTION) {
           String album =  txtAlbum.getText ();
        String genre =  txt_genre.getText ();
        String artist =  txtArtist.getText ();
        String released_date =   txtReleasedDate.getText ();
        String number_tracks =   txtNumberTracks.getText ();
       String image =  photopath;

       
       try {
            rs.updateString ("ARTIST",artist);
            rs.updateString ("ALBUM",album);
            rs.updateString ("GENRE",genre);
            rs.updateString ("RELEASED_DATE",released_date);
            rs.updateString ("NUMBER_TRACKS",number_tracks);
            rs.updateString ("IMAGE", image);
           
           rs.updateRow();
           JOptionPane.showMessageDialog (this, "Updated");
           
       }
       catch (SQLException err){
           System.out.println(err.getMessage());
	
       }
	 txtAlbum.setEnabled(!true);
txtArtist.setEnabled(!true);
txt_genre.setEnabled(!true);
txtNumberTracks.setEnabled(!true);
txtReleasedDate.setEnabled(!true);

btnChoose.setEnabled(!true);

btnPrevious.setEnabled(!false);
btnNext.setEnabled(!false);
btnUpdateRecord.setEnabled(!false);
btnDeleteRecord.setEnabled(!false);
btnNewRecord.setEnabled(!false);
 btnSaveUpdateRecord.setEnabled(!true);
 TxtSearch.setEnabled(true);
btnSearch.setEnabled(true);



        } else if (response == JOptionPane.NO_OPTION) {
           
             try {
		
                 
              
		 txtAlbum.setText(rs.getString("album"));
        txt_genre.setText (rs.getString("genre"));
        txtArtist.setText (rs.getString("artist"));
        txtReleasedDate.setText (rs.getString("released_date"));
        txtNumberTracks.setText(rs.getString("number_tracks"));
        txtImage.setIcon(ResizeImage(rs.getString("IMAGE"),null));

		//rs.curRow();

		  JOptionPane.showMessageDialog (this, "Cancel Updates");
                  
           
       }catch(SQLException err) {
           JOptionPane.showMessageDialog(this,err.getMessage());
       }
     
            
            JOptionPane.getRootFrame().dispose(); 
            
           txtAlbum.setEnabled(!true);
txtArtist.setEnabled(!true);
txt_genre.setEnabled(!true);
txtNumberTracks.setEnabled(!true);
txtReleasedDate.setEnabled(!true);

btnChoose.setEnabled(!true);

btnPrevious.setEnabled(!false);
btnNext.setEnabled(!false);
btnUpdateRecord.setEnabled(!false);
btnDeleteRecord.setEnabled(!false);
btnNewRecord.setEnabled(!false);
btnSaveUpdateRecord.setEnabled(false);
TxtSearch.setEnabled(true);
btnSearch.setEnabled(true);


           return;
        }
    
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveUpdateRecordActionPerformed

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser=new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter fnef=new FileNameExtensionFilter("*.images", "jpg","png");
        chooser.addChoosableFileFilter(fnef);
        
        
        int ans=chooser.showSaveDialog(null);
        if (ans==JFileChooser.APPROVE_OPTION) {
            File selectedPhoto=chooser.getSelectedFile();
            String path=selectedPhoto.getAbsolutePath();
            txtImage.setIcon(ResizeImage(path, null));
            this.photopath=path;
        }
    }//GEN-LAST:event_btnChooseActionPerformed

    private void txtAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlbumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlbumActionPerformed

    private void TxtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
try {
            String sql = "select * from ALBUMS where LOWER(NUMBER_TRACKS) like LOWER(?)";
          
            PreparedStatement pst = con.prepareStatement (sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            pst.setString(1,(TxtSearch.getText() + '%'));
            ResultSet rs = pst.executeQuery();
            
        if (rs.next()==true){
            
             String album = rs.getString("ALBUM");
        String genre = rs.getString("GENRE");
        String artist = rs.getString("ARTIST");
        String released_date = rs.getString("RELEASED_DATE");
        String number_tracks = rs.getString("NUMBER_TRACKS");
        String image = rs.getString("IMAGE");
      

        txtAlbum.setText(album);
        txt_genre.setText (genre);
        txtArtist.setText (artist);
        txtReleasedDate.setText (released_date);
        txtNumberTracks.setText(number_tracks);
     
                txtImage.setIcon(ResizeImage(rs.getString("IMAGE"), null));
                        
        }
        
                        else
                        {
           txtAlbum.setText("");
	txt_genre.setText ("");
	txtArtist.setText ("");
	txtReleasedDate.setText ("");
	txtNumberTracks.setText("");
        txtImage.setText("");
         txtImage.setIcon(ResizeImage(" ", null));

            
            JOptionPane.showMessageDialog(this, "Sorry, Record Not Found");
 
                
          }
            
        } 
        catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err.getMessage());

        }
    
        
    
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIMusicManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIMusicManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIMusicManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIMusicManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIMusicManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtSearch;
    private javax.swing.JButton btnCancelNewRecord;
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnDeleteRecord;
    private javax.swing.JButton btnNewRecord;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSaveRecord;
    private javax.swing.JButton btnSaveUpdateRecord;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateRecord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField txtAlbum;
    private javax.swing.JTextField txtArtist;
    private javax.swing.JLabel txtImage;
    private javax.swing.JTextField txtNumberTracks;
    private javax.swing.JTextField txtReleasedDate;
    private javax.swing.JTextField txt_genre;
    // End of variables declaration//GEN-END:variables

class RoundedPanel extends JPanel
    {
        private Color backgroundColor;
        private int cornerRadius = 15;
        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }
        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;
            
        }
        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
